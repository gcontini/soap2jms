
package com.github.soap2jms.service;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "soapToJmsSenderService", targetNamespace = "http://soap2jms.github.com/service")
public class SoapToJmsSenderService extends Service {

	private final static QName SOAPTOJMSSENDERSERVICE_QNAME = new QName("http://soap2jms.github.com/service",
			"soapToJmsSenderService");

	public SoapToJmsSenderService(final String wsdlLocation) throws MalformedURLException {
		super(new URL(wsdlLocation), SOAPTOJMSSENDERSERVICE_QNAME);
	}

	public SoapToJmsSenderService(final URL wsdlLocation) {
		super(wsdlLocation, SOAPTOJMSSENDERSERVICE_QNAME);
	}

	public SoapToJmsSenderService(final URL wsdlLocation, final QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public SoapToJmsSenderService(final URL wsdlLocation, final QName serviceName,
			final WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	public SoapToJmsSenderService(final URL wsdlLocation, final WebServiceFeature... features) {
		super(wsdlLocation, SOAPTOJMSSENDERSERVICE_QNAME, features);
	}

	/**
	 * 
	 * @return returns SenderSoap2Jms
	 */
	@WebEndpoint(name = "senderSOAP")
	public SenderSoap2Jms getSenderSOAP() {
		return super.getPort(new QName("http://soap2jms.github.com/service", "senderSOAP"), SenderSoap2Jms.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns SenderSoap2Jms
	 */
	@WebEndpoint(name = "senderSOAP")
	public SenderSoap2Jms getSenderSOAP(final WebServiceFeature... features) {
		return super.getPort(new QName("http://soap2jms.github.com/service", "senderSOAP"), SenderSoap2Jms.class,
				features);
	}

}

<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
	<properties>
		<title>Design - Reliability</title>
		<author>Gabriele Contini</author>
		<date>2016-10-05</date>
	</properties>
	<body>
		<section name="Reliability">
			<p>
				When implementing Soap2Jms a special attention has been placed to
				reliability (the ability of the system to deliver messages over the
				time) and resilience to temporary network failures. 
				JMS has built-in error recovery features, implementing the
				same feature using SOAP over HTTP requires extra coding effort.
			</p>
			<subsection name="Sending messages to a queue">
				<p>
					A good reading on message sending can be found in the
					<a
						href="https://activemq.apache.org/artemis/docs/1.0.0/duplicate-detection.html">ActiveMQ guide</a>
					.
					Below an extract of the most important part:
				</p>
				<blockquote>
					<p>When sending messages from a client to a server, if the target
						server or connection fails sometime after sending the message, but
						before the sender receives a response that the send (or commit)
						was processed successfully then the sender cannot know for sure if
						the message was sent successfully to the address.
					</p>
					<p>If the target server or connection failed after the send was
						received and processed but before the response was sent back then
						the message will have been sent to the address successfully, but
						if the target server or connection failed before the send was
						received
						and finished processing then it will not have been sent to
						the address successfully. From the senders point of view it's not
						possible to distinguish these two cases.
					</p>
					<p>
						When the server recovers this leaves the client in a difficult
						situation. It knows the target server failed, but it does not know
						if the last message reached its destination ok. If it decides to
						resend the last message, then that could result in a duplicate
						message being sent to the address.
					</p>
				</blockquote>
				<p>
					What has been implemented in Soap2Jms is an Enterprise Pattern
					called
					<a
						href="http://www.enterpriseintegrationpatterns.com/patterns/messaging/IdempotentReceiver.html">
						Idempotent Receiver
					</a>
					.
					The client can resend the message and only one copy will be placed
					in the destination queue.
				</p>
			</subsection>
			<subsection name="Duplicate message detection">
				<p>
					What we try to acheive is that each message is put exaclty once
					in the destination queue.
				</p>
				<p>TODO: client generated id. Automatic generated id.</p>
			</subsection>
			<subsection name="References">
				<ul>
					<li>Brewer's theorem: https://en.wikipedia.org/wiki/CAP_theorem
					</li>
				</ul>
			</subsection>
		</section>
	</body>
</document>